#api
  p.note Everything here is experimental, and the API is no exception, so expect things to change in future releases.

  h2 Alfred.open (path_to_database, [options, ] callback)
  p Opens a new or an existing database that resides in <i>path_to_database</i>.
  p
    ul
      li <b>path_to_database</b>: directory where the database files (will) reside. Must already exist.
      li <b>callback</b> (err, db): invoked when there is an error or the database is open. Use db to access / create / remove key maps.
      li <b>options:</b>
        ul
          li <b>meta_compact_interval</b>: default average compact interval for key maps, in miliseconds. Defaults to 1 hour (1000 * 60 * 60).
          li <b>replication_master</b>: true if this database is going to act as a replication master. Defaults to false.
          li <b>replication_port</b>: replication server port for this database. Defaults to 5293.
  h3 Example:
  pre
    code
      | var Alfred = require('alfred');
      | Alfred.open('path/to/database/dir', function(err, db) {
      |  // now I have the db object to do stuff
      | });
  
  h2 database.attach_key_map (key_map_name [, options], callback)
  p Attaches a key map to this database.
  p
    ul
      li <b>key_map_name</b>: name of this key map. Will be available as <i>database.<key_map_name></i>.
      li <b>callback</b> (err, key_map): invoked when there is an error or the key map is attached.
      li <b>options</b>:
        ul
          li <b>type</b>: can be one of 'cached_key_map' or 'indexed_key_map'. Defaults to 'cached_key_map'. ('cached_key_map' is also indexed)
          li <b>compact_interval</b>: average compact interval, in miliseconds. Defaults to 1 hour (1000 * 60 * 60).